package com.github.terefang.jmelange.gfx.impl;

import com.github.terefang.jmelange.commons.CustomStreamTokenizer;
import com.github.terefang.jmelange.commons.loader.ClasspathResourceLoader;
import com.github.terefang.jmelange.gfx.GfxFont;
import com.github.terefang.jmelange.gfx.GfxInterface;
import lombok.Data;
import lombok.SneakyThrows;

import java.io.*;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.zip.GZIPInputStream;

@Data
public class BmpFont implements GfxFont
{
    int[][] fontBitmap;
    int[] fontWidths;

    char[] fontCMap;
    int fontWidth;
    int widthBase;
    int fontHeight;
    int firstChar;

    public static GfxFont from(int[][] _fontBitmap, int[] _fontWidths, int _fontWidth, int _fontHeight, int _widthBase, int _firstChar, char[] _cmap)
    {
        BmpFont _af = new BmpFont();
        _af.setFontBitmap(_fontBitmap);
        _af.setFontWidths(_fontWidths);
        _af.setFontWidth(_fontWidth);
        _af.setFontHeight(_fontHeight);
        _af.setFirstChar(_firstChar);
        _af.setWidthBase(_widthBase);
        _af.setFontCMap(_cmap);
        return _af;
    }

    @SneakyThrows
    public static GfxFont load(File _file)
    {
        String _fileName = _file.getName();
        InputStream _in = new FileInputStream(_file);
        if(_fileName.endsWith(".gdfa"))
        {
            return loadFromGDFA(_in);
        }
        else if(_fileName.endsWith(".gdfa.gz"))
        {
            return loadFromGDFA(new GZIPInputStream(_in));
        }
        else if(_fileName.endsWith(".gdf"))
        {
            return loadFromGDFB(_in, false);
        }
        else if(_fileName.endsWith(".gdf.gz"))
        {
            return loadFromGDFB(new GZIPInputStream(_in), false);
        }
        else if(_fileName.endsWith(".gdfx"))
        {
            return loadFromGDFB(_in, true);
        }
        else if(_fileName.endsWith(".gdfx.gz"))
        {
            return loadFromGDFB(new GZIPInputStream(_in), true);
        }
        throw new IllegalArgumentException("Unknown Font Format = " + _fileName);
    }

    private static GfxFont loadFromRomBin(InputStream _in, int _w, int _h) {
        BmpFont _af = new BmpFont();
        /*
        _af.setFontBitmap(_fontBitmap);
        _af.setFontWidths(_fontWidths);
        _af.setFontWidth(_fontWidth);
        _af.setFontHeight(_fontHeight);
        _af.setFirstChar(_firstChar);
        _af.setWidthBase(_widthBase);
        */
        return _af;
    }

    @SneakyThrows
    private static GfxFont loadFromGDFB(InputStream _in, boolean _ext) {
        BmpFont _af = new BmpFont();
        /* Only supports a architecture-dependent binary dump format
         * at the moment.
         * The file format is like this on machines with 32-byte integers:
         *
         * byte 0-3:   (int) number of characters in the font
         * byte 4-7:   (int) value of first character in the font (often 32, space)
         * byte 8-11:  (int) pixel width of each character
         * byte 12-15: (int) pixel height of each character
         * bytes 16-:  (char) array with character data, one byte per pixel
         *                    in each character, for a total of
         *                    (nchars*width*height) bytes.
         */
        /*---
         *
         *  extended format has byte[numofChars] charAdvanceWidth @ 0x10
         *  character data follows and is considered greyscale (anti-aliased)
         *  but 0x01 is considered full color in lecacy/interim mode.
         *
         */
        EndianDataInputStream edis = new EndianDataInputStream(_in);
        edis.order(ByteOrder.BIG_ENDIAN);
        int numChars = edis.readInt();
        if(numChars != (numChars & 0xffff))
        {
            edis.order(ByteOrder.LITTLE_ENDIAN);
            numChars = ((numChars >>> 24) & 0xff) | ((numChars >>> 8) & 0xff00);
        }

        int startChar = edis.readInt();
        int charW = edis.readInt();
        int charH = edis.readInt();

        _af.setFirstChar(startChar);
        _af.setWidthBase(charW);
        _af.setFontWidth(charW);
        _af.setFontHeight(charH);

        int _table[][] = new int[numChars][charH];

        // ext format contains real char widths in front of bitmap data
        if(_ext)
        {
            int[] charAdvance = new int[numChars];
            for(int ci = 0; ci < numChars; ci++)
            {
                charAdvance[ci] = (edis.readByte() & 0xff);
            }
            _af.setFontWidths(charAdvance);
        }

        for(int c = startChar; c < (startChar + numChars); c++)
        {
            // ext format is grey-scale
            if(_ext)
            {
                for(int y = 0; y < charH; y++)
                {
                    int _row=0;
                    for(int x = 0; x < charW; x++)
                    {
                        _row = (_row<<1) | ((edis.readByte() & 0xff)>0 ? 1 : 0);
                    }
                    _table[c-startChar][y] = _row;
                }
            }
            else
            {
                for(int y = 0; y < charH; y++)
                {
                    int _row=0;
                    for(int x = 0; x < charW; x++)
                    {
                        _row = (_row<<1) | ((edis.readByte() & 0xff)>0 ? 1 : 0);
                    }
                    _table[c-startChar][y] = _row;
                }
            }
        }
        _af.setFontBitmap(_table);
        edis.close();
        return _af;
    }

    public static int nextPowerOf2(int a)
    {
        int b = 1;
        while(b < a)
        {
            b <<= 1;
        }
        return b;
    }

    @SneakyThrows
    private static GfxFont loadFromGDFA(InputStream _in) {
        BmpFont _af = new BmpFont();
        int startChar = 0;
        int numChars = 0;
        int charW = 0;
        int charH = 0;

        CustomStreamTokenizer st = new CustomStreamTokenizer(new InputStreamReader(_in));
        st.slashStarComments(true);
        st.slashSlashComments(true);
        st.parseNumbers();

        st.hexLiterals(true);
        st.whitespaceChars(0, 0x20);
        st.whitespaceChars(',', ',');
        st.wordChars(0x40, 0x5A);
        st.wordChars(0x60, 0x7A);

        st.nextToken();
        if("GDFA".equalsIgnoreCase(st.stringValue))
        {
            st.nextToken();
            startChar = (int) st.cardinalValue;
            st.nextToken();
            numChars = (int) st.cardinalValue;
            st.nextToken();
            charW = (int) st.cardinalValue;
            st.nextToken();
            charH = (int) st.cardinalValue;

            _af.setFontHeight(charH);
            _af.setFontWidth(charW);
            _af.setWidthBase(charW);
            _af.setFirstChar(startChar);

            int[] wAdvance = null;
            char[] cMap = null;


            /* -- proportional advancees -- */
            st.nextToken();
            if("advances".equalsIgnoreCase(st.stringValue))
            {
                wAdvance = new int[numChars];
                for(int _i=0; _i<numChars; _i++)
                {
                    st.nextToken();
                    wAdvance[_i] = (int) st.cardinalValue;
                }
                _af.setFontWidths(wAdvance);
            }
            else
            {
                st.pushBack();
            }

            /* -- discontinous character map -- */
            st.nextToken();
            if("cmap".equalsIgnoreCase(st.stringValue))
            {
                cMap = new char[numChars];
                for(int _i=0; _i<numChars; _i++)
                {
                    st.nextToken();
                    cMap[_i] = (char) st.cardinalValue;
                }
                _af.setFontCMap(cMap);
            }
            else
            {
                st.pushBack();
            }


            int _table[][] = new int[numChars][charH];

            for(int c = startChar; c < (startChar + numChars); c++)
            {
                int _i = c - startChar;
                for(int y = 0; y < charH; y++)
                {
                    int _row = 0;
                    for(int x = 0; x < charW; x++)
                    {
                        st.nextToken();
                        _row = (_row<<1) | (((int)st.cardinalValue)>0 ? 1: 0);
                    }
                    _table[_i][y] = _row;
                }
            }
            _af.setFontBitmap(_table);
            _in.close();
        }
        else
        {
            throw new IllegalArgumentException("Unknown Font Format = " + st.cardinalValue);
        }
        return _af;
    }


    public void drawString(GfxInterface _surface, int _x, int _y, String _s, long _color)
    {
        for(char _c : _s.toCharArray())
        {
            _x += this.drawChar(_surface, _x, _y, _c, _color, 0, false);
        }
    }

    public void drawString(GfxInterface _surface, int _x, int _y, String _s, long _color, long _mcolor)
    {
        for(char _c : _s.toCharArray())
        {
            _x += this.drawChar(_surface, _x, _y, _c, _color, _mcolor, true);
        }
    }

    public int drawChar(GfxInterface _surface, int _x, int _y, char _c, long _color, long _mcolor, boolean _useMColor)
    {
        int _i = _c - this.firstChar;
        if(_i<0) _i = '?' - this.firstChar;
        if(_i>=this.fontBitmap.length) _i = '?' - this.firstChar;

        if(this.fontCMap!=null)
        {
            for(_i=0; _i<this.fontCMap.length; _i++)
            {
                if(this.fontCMap[_i]==_c) break;
            }
            if(_i==this.fontCMap.length) _i = '?' - this.firstChar;
        }

        int _mask = 1 << (this.widthBase-1);
        int _width = this.fontWidths==null ? this.fontWidth : this.fontWidths[_i];

        for(int _h = 0; _h<this.fontHeight; _h++)
        {
            for(int _w = 0; _w<_width; _w++)
            {
                if((this.fontBitmap[_i][_h] & (_mask>>>_w)) > 0)
                {
                    _surface.gSet(_x+_w,_y+_h,_color);
                }
                else if(_useMColor)
                {
                    _surface.gSet(_x+_w,_y+_h,_mcolor);
                }
            }
        }

        return _width;
    }

    public static GfxFont defaultInstance()
    {
        return defaultC6x10();
    }

    @SneakyThrows
    public static GfxFont defaultC8x8()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x8_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC8x10()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x10_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC8x12()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x12_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC8x13()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x13_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC8x14()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x14_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC8x16()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_8x16_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC7x14()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_7x14_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC6x10()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_6x10_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC6x12()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_6x12_LE.gdf.gz", null).getInputStream()), false);
    }

    @SneakyThrows
    public static GfxFont defaultC6x13()
    {
        return loadFromGDFB(new GZIPInputStream(ClasspathResourceLoader.of("cfnt/C_6x13_LE.gdf.gz", null).getInputStream()), false);
    }

    public static GfxFont defaultAmi8()
    {
        return loadFromGDFB(ClasspathResourceLoader.of("gdf/ami8.gdf", null).getInputStream(), false);
    }

    public static GfxFont defaultSmallDisplay()
    {
        return loadFromGDFB(ClasspathResourceLoader.of("gdf/display.gdf", null).getInputStream(), false);
    }

    public static GfxFont defaultTiny()
    {
        return loadFromGDFA(ClasspathResourceLoader.of("gd/tiny.gdfa", null).getInputStream());
    }

    public static GfxFont defaultMedium()
    {
        return loadFromGDFA(ClasspathResourceLoader.of("gd/medium.gdfa", null).getInputStream());
    }

    public static GfxFont defaultSmall()
    {
        return loadFromGDFA(ClasspathResourceLoader.of("gd/small.gdfa", null).getInputStream());
    }

    public static GfxFont defaultLarge()
    {
        return loadFromGDFA(ClasspathResourceLoader.of("gd/large.gdfa", null).getInputStream());
    }

    public static GfxFont defaultGiant()
    {
        return loadFromGDFA(ClasspathResourceLoader.of("gd/giant.gdfa", null).getInputStream());
    }

    public static GfxFont default8x16()
    {
        return from(AVGA2_8x16.table, AVGA2_8x16.wAdvance, AVGA2_8x16.width, AVGA2_8x16.height, AVGA2_8x16.wbase, AVGA2_8x16.start, null);
    }

    public static GfxFont default8x14()
    {
        return from(AVGA2_8x14.table, AVGA2_8x14.wAdvance, AVGA2_8x14.width, AVGA2_8x14.height, AVGA2_8x14.wbase, AVGA2_8x14.start, null);
    }

    public static GfxFont default6x12()
    {
        return from(ASCII_6x12.table, ASCII_6x12.wAdvance, ASCII_6x12.width, ASCII_6x12.height, ASCII_6x12.wbase, ASCII_6x12.start, null);
    }

    public static GfxFont default6x11()
    {
        return from(Ascii_6x11.table, Ascii_6x11.wAdvance, Ascii_6x11.width, Ascii_6x11.height, Ascii_6x11.wbase, Ascii_6x11.start, null);
    }

    public static GfxFont default8x8()
    {
        return from(Ascii_8x8.table, Ascii_8x8.wAdvance, Ascii_8x8.width, Ascii_8x8.height, Ascii_8x8.wbase, Ascii_8x8.start, null);
    }

    public static class ASCII_6x12 {
        public static int start = 32;
        public static int height = 12;
        public static int width = 6;
        public static int wbase = 8;
        public static int[] wAdvance = null;
        public static int[] cMap = null;
        public static int table[][] = {
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=32
                {0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00,}, // chr=33
                {0x00, 0x00, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=34
                {0x00, 0x00, 0x50, 0xF8, 0x50, 0xF8, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=35
                {0x00, 0x20, 0x70, 0xA8, 0xA0, 0x70, 0x28, 0xA8, 0x70, 0x20, 0x00, 0x00,}, // chr=36
                {0x00, 0x00, 0x40, 0xA4, 0xA8, 0x58, 0x34, 0x54, 0x88, 0x00, 0x00, 0x00,}, // chr=37
                {0x00, 0x00, 0x60, 0x90, 0xA0, 0x40, 0xA8, 0x90, 0x68, 0x00, 0x00, 0x00,}, // chr=38
                {0x00, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=39
                {0x00, 0x00, 0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x10, 0x00, 0x00, 0x00,}, // chr=40
                {0x00, 0x00, 0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00,}, // chr=41
                {0x00, 0x00, 0x20, 0xA8, 0x70, 0xA8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=42
                {0x00, 0x00, 0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00,}, // chr=43
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x80, 0x00,}, // chr=44
                {0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=45
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,}, // chr=46
                {0x00, 0x00, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x40, 0x40, 0x00, 0x00,}, // chr=47
                {0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=48
                {0x00, 0x00, 0x10, 0x30, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00,}, // chr=49
                {0x00, 0x00, 0x70, 0x88, 0x08, 0x10, 0x20, 0x40, 0xF8, 0x00, 0x00, 0x00,}, // chr=50
                {0x00, 0x00, 0x70, 0x88, 0x08, 0x30, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=51
                {0x00, 0x00, 0x10, 0x30, 0x50, 0x90, 0xF8, 0x10, 0x10, 0x00, 0x00, 0x00,}, // chr=52
                {0x00, 0x00, 0xF8, 0x80, 0xF0, 0x08, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=53
                {0x00, 0x00, 0x70, 0x80, 0xF0, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=54
                {0x00, 0x00, 0xF8, 0x08, 0x08, 0x10, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=55
                {0x00, 0x00, 0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=56
                {0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00, 0x00, 0x00,}, // chr=57
                {0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,}, // chr=58
                {0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x20, 0x40, 0x00,}, // chr=59
                {0x00, 0x00, 0x00, 0x10, 0x20, 0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00,}, // chr=60
                {0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=61
                {0x00, 0x00, 0x00, 0x40, 0x20, 0x10, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00,}, // chr=62
                {0x00, 0x00, 0x70, 0x88, 0x08, 0x10, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00,}, // chr=63
                {0x00, 0x00, 0x70, 0x88, 0xE8, 0xA8, 0xF0, 0x80, 0x70, 0x00, 0x00, 0x00,}, // chr=64
                {0x00, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=65
                {0x00, 0x00, 0xF0, 0x88, 0x88, 0xF0, 0x88, 0x88, 0xF0, 0x00, 0x00, 0x00,}, // chr=66
                {0x00, 0x00, 0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=67
                {0x00, 0x00, 0xF0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xF0, 0x00, 0x00, 0x00,}, // chr=68
                {0x00, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=69
                {0x00, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,}, // chr=70
                {0x00, 0x00, 0x70, 0x88, 0x80, 0x98, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=71
                {0x00, 0x00, 0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=72
                {0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=73
                {0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=74
                {0x00, 0x00, 0x88, 0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x88, 0x00, 0x00, 0x00,}, // chr=75
                {0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=76
                {0x00, 0x00, 0x88, 0xD8, 0xA8, 0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=77
                {0x00, 0x00, 0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=78
                {0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=79
                {0x00, 0x00, 0xF0, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,}, // chr=80
                {0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x08, 0x00, 0x00,}, // chr=81
                {0x00, 0x00, 0xF0, 0x88, 0x88, 0xF0, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=82
                {0x00, 0x00, 0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=83
                {0x00, 0x00, 0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=84
                {0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=85
                {0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00, 0x00, 0x00,}, // chr=86
                {0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0xA8, 0xD8, 0x88, 0x00, 0x00, 0x00,}, // chr=87
                {0x00, 0x00, 0x88, 0x50, 0x20, 0x20, 0x20, 0x50, 0x88, 0x00, 0x00, 0x00,}, // chr=88
                {0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=89
                {0x00, 0x00, 0xF8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=90
                {0x00, 0x00, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x00, 0x00, 0x00,}, // chr=91
                {0x00, 0x00, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x00, 0x00,}, // chr=92
                {0x00, 0x00, 0x30, 0x10, 0x10, 0x10, 0x10, 0x10, 0x30, 0x00, 0x00, 0x00,}, // chr=93
                {0x00, 0x00, 0x20, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=94
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00,}, // chr=95
                {0x00, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=96
                {0x00, 0x00, 0x00, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=97
                {0x00, 0x00, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0xF0, 0x00, 0x00, 0x00,}, // chr=98
                {0x00, 0x00, 0x00, 0x00, 0x70, 0x88, 0x80, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=99
                {0x00, 0x00, 0x08, 0x08, 0x78, 0x88, 0x88, 0x88, 0x78, 0x00, 0x00, 0x00,}, // chr=100
                {0x00, 0x00, 0x00, 0x00, 0x70, 0x88, 0xF8, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=101
                {0x00, 0x00, 0x18, 0x20, 0x70, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=102
                {0x00, 0x00, 0x00, 0x00, 0x78, 0x88, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00,}, // chr=103
                {0x00, 0x00, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=104
                {0x00, 0x00, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=105
                {0x00, 0x00, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xC0, 0x00,}, // chr=106
                {0x00, 0x00, 0x80, 0x80, 0x90, 0xA0, 0xE0, 0x90, 0x88, 0x00, 0x00, 0x00,}, // chr=107
                {0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=108
                {0x00, 0x00, 0x00, 0x00, 0xF0, 0xA8, 0xA8, 0xA8, 0xA8, 0x00, 0x00, 0x00,}, // chr=109
                {0x00, 0x00, 0x00, 0x00, 0xB0, 0xC8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=110
                {0x00, 0x00, 0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=111
                {0x00, 0x00, 0x00, 0x00, 0xF0, 0x88, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00,}, // chr=112
                {0x00, 0x00, 0x00, 0x00, 0x78, 0x88, 0x88, 0x88, 0x78, 0x08, 0x08, 0x00,}, // chr=113
                {0x00, 0x00, 0x00, 0x00, 0xB0, 0xC8, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,}, // chr=114
                {0x00, 0x00, 0x00, 0x00, 0x78, 0x80, 0x70, 0x08, 0xF0, 0x00, 0x00, 0x00,}, // chr=115
                {0x00, 0x00, 0x20, 0x20, 0x70, 0x20, 0x20, 0x20, 0x18, 0x00, 0x00, 0x00,}, // chr=116
                {0x00, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=117
                {0x00, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00, 0x00, 0x00,}, // chr=118
                {0x00, 0x00, 0x00, 0x00, 0xA8, 0xA8, 0xA8, 0xA8, 0x50, 0x00, 0x00, 0x00,}, // chr=119
                {0x00, 0x00, 0x00, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0x00, 0x00, 0x00,}, // chr=120
                {0x00, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00,}, // chr=121
                {0x00, 0x00, 0x00, 0x00, 0xF8, 0x10, 0x20, 0x40, 0xF8, 0x00, 0x00, 0x00,}, // chr=122
                {0x00, 0x08, 0x10, 0x10, 0x10, 0x20, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00,}, // chr=123
                {0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00,}, // chr=124
                {0x00, 0x40, 0x20, 0x20, 0x20, 0x10, 0x20, 0x20, 0x20, 0x40, 0x00, 0x00,}, // chr=125
                {0x00, 0x00, 0x68, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=126
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=127
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=128
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=129
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x20, 0x00, 0x00,}, // chr=130
                {0x18, 0x20, 0x20, 0x20, 0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0xC0, 0x00,}, // chr=131
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x48, 0x90, 0x00, 0x00,}, // chr=132
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00,}, // chr=133
                {0x00, 0x00, 0x20, 0x70, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=134
                {0x00, 0x00, 0x20, 0x20, 0x70, 0x20, 0x20, 0x70, 0x20, 0x20, 0x00, 0x00,}, // chr=135
                {0x00, 0x20, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=136
                {0x00, 0x00, 0x40, 0xA8, 0xB0, 0x54, 0x6A, 0xAA, 0x94, 0x00, 0x00, 0x00,}, // chr=137
                {0x50, 0x20, 0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=138
                {0x00, 0x00, 0x00, 0x20, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=139
                {0x00, 0x00, 0x7C, 0x90, 0x90, 0x98, 0x90, 0x90, 0x7C, 0x00, 0x00, 0x00,}, // chr=140
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=141
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=142
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=143
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=144
                {0x00, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=145
                {0x00, 0x00, 0x30, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=146
                {0x00, 0x00, 0x28, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=147
                {0x00, 0x00, 0x28, 0x28, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=148
                {0x00, 0x00, 0x00, 0x70, 0xF8, 0xF8, 0xF8, 0x70, 0x00, 0x00, 0x00, 0x00,}, // chr=149
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=150
                {0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=151
                {0x00, 0x28, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=152
                {0x00, 0x00, 0xF4, 0x5C, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=153
                {0x00, 0x50, 0x20, 0x00, 0x78, 0x80, 0x70, 0x08, 0xF0, 0x00, 0x00, 0x00,}, // chr=154
                {0x00, 0x00, 0x00, 0x20, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=155
                {0x00, 0x00, 0x00, 0x00, 0x50, 0xA8, 0xB8, 0xA0, 0x58, 0x00, 0x00, 0x00,}, // chr=156
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=157
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=158
                {0x50, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=159
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=160
                {0x00, 0x00, 0x10, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00,}, // chr=161
                {0x00, 0x00, 0x00, 0x20, 0x70, 0xA8, 0xA0, 0xA8, 0x70, 0x20, 0x00, 0x00,}, // chr=162
                {0x00, 0x60, 0x90, 0x80, 0xE0, 0x80, 0x80, 0x88, 0xF0, 0x00, 0x00, 0x00,}, // chr=163
                {0x00, 0x00, 0x00, 0x00, 0x60, 0x90, 0x90, 0x60, 0x00, 0x00, 0x00, 0x00,}, // chr=164
                {0x00, 0x00, 0x88, 0x50, 0xF8, 0x20, 0xF8, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=165
                {0x00, 0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00,}, // chr=166
                {0x70, 0x88, 0x48, 0xA0, 0x90, 0x48, 0x28, 0x90, 0x88, 0x70, 0x00, 0x00,}, // chr=167
                {0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=168
                {0x00, 0x00, 0x38, 0x44, 0x9A, 0xA2, 0x9A, 0x44, 0x38, 0x00, 0x00, 0x00,}, // chr=169
                {0x00, 0x00, 0x38, 0x48, 0x48, 0x38, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00,}, // chr=170
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x90, 0x90, 0x48, 0x00, 0x00, 0x00,}, // chr=171
                {0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,}, // chr=172
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=173
                {0x00, 0x38, 0x44, 0xBA, 0xAA, 0xB2, 0xAA, 0x44, 0x38, 0x00, 0x00, 0x00,}, // chr=174
                {0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=175
                {0x00, 0x30, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=176
                {0x00, 0x00, 0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0xF8, 0x00, 0x00, 0x00,}, // chr=177
                {0x60, 0x90, 0x20, 0x40, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=178
                {0x60, 0x10, 0x30, 0x10, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=179
                {0x00, 0x00, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=180
                {0x00, 0x00, 0x00, 0x00, 0x90, 0x90, 0x90, 0x90, 0xE8, 0x80, 0x80, 0x00,}, // chr=181
                {0x00, 0x78, 0xA8, 0xA8, 0xA8, 0x78, 0x28, 0x28, 0x28, 0x00, 0x00, 0x00,}, // chr=182
                {0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=183
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x10, 0x60, 0x00,}, // chr=184
                {0x20, 0x60, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=185
                {0x00, 0x00, 0x30, 0x48, 0x48, 0x30, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00,}, // chr=186
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x48, 0x48, 0x90, 0x00, 0x00, 0x00,}, // chr=187
                {0x20, 0x60, 0x20, 0x20, 0x00, 0xF8, 0x20, 0x60, 0xF0, 0x20, 0x20, 0x00,}, // chr=188
                {0x20, 0x60, 0x20, 0x20, 0x00, 0xF8, 0x60, 0x90, 0x20, 0x40, 0xF0, 0x00,}, // chr=189
                {0x60, 0x10, 0x30, 0x10, 0x60, 0xF8, 0x20, 0x60, 0xF0, 0x20, 0x20, 0x00,}, // chr=190
                {0x00, 0x00, 0x20, 0x00, 0x20, 0x40, 0x80, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=191
                {0x40, 0x20, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=192
                {0x20, 0x40, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=193
                {0x20, 0x50, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=194
                {0x68, 0xB0, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=195
                {0x50, 0x00, 0x00, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=196
                {0x20, 0x50, 0x20, 0x70, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=197
                {0x00, 0x00, 0x7C, 0x90, 0x90, 0xF8, 0x90, 0x90, 0x9C, 0x00, 0x00, 0x00,}, // chr=198
                {0x00, 0x00, 0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x20, 0x40, 0x00,}, // chr=199
                {0x40, 0x20, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=200
                {0x10, 0x20, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=201
                {0x20, 0x50, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=202
                {0x50, 0x00, 0x00, 0xF8, 0x80, 0x80, 0xF0, 0x80, 0xF8, 0x00, 0x00, 0x00,}, // chr=203
                {0x40, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=204
                {0x10, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=205
                {0x20, 0x50, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=206
                {0x50, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=207
                {0x00, 0x00, 0x78, 0x44, 0x44, 0xE4, 0x44, 0x44, 0x78, 0x00, 0x00, 0x00,}, // chr=208
                {0x68, 0xB0, 0x00, 0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=209
                {0x40, 0x20, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=210
                {0x10, 0x20, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=211
                {0x20, 0x50, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=212
                {0x68, 0xB0, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=213
                {0x50, 0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=214
                {0x00, 0x00, 0x00, 0x00, 0x50, 0x20, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,}, // chr=215
                {0x00, 0x00, 0x70, 0x88, 0x98, 0xA8, 0xC8, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=216
                {0x40, 0x20, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=217
                {0x10, 0x20, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=218
                {0x20, 0x50, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=219
                {0x50, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=220
                {0x10, 0x20, 0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=221
                {0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00, 0x00, 0x00,}, // chr=222
                {0x00, 0x30, 0x48, 0x88, 0x90, 0x90, 0x88, 0x88, 0xB0, 0x80, 0x00, 0x00,}, // chr=223
                {0x00, 0x20, 0x10, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=224
                {0x00, 0x10, 0x20, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=225
                {0x00, 0x20, 0x50, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=226
                {0x00, 0x68, 0xB0, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=227
                {0x00, 0x00, 0x50, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=228
                {0x30, 0x48, 0x30, 0x00, 0x78, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=229
                {0x00, 0x00, 0x00, 0x00, 0x70, 0xA8, 0xB8, 0xA0, 0x78, 0x00, 0x00, 0x00,}, // chr=230
                {0x00, 0x00, 0x00, 0x00, 0x70, 0x88, 0x80, 0x80, 0x78, 0x20, 0x40, 0x00,}, // chr=231
                {0x00, 0x40, 0x20, 0x00, 0x70, 0x88, 0xF8, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=232
                {0x00, 0x10, 0x20, 0x00, 0x70, 0x88, 0xF8, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=233
                {0x00, 0x20, 0x50, 0x00, 0x70, 0x88, 0xF8, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=234
                {0x00, 0x00, 0x50, 0x00, 0x70, 0x88, 0xF8, 0x80, 0x78, 0x00, 0x00, 0x00,}, // chr=235
                {0x00, 0x40, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=236
                {0x00, 0x10, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=237
                {0x00, 0x20, 0x50, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=238
                {0x00, 0x00, 0x50, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00,}, // chr=239
                {0x00, 0x20, 0x78, 0x10, 0x18, 0x28, 0x48, 0x48, 0x30, 0x00, 0x00, 0x00,}, // chr=240
                {0x00, 0x68, 0xB0, 0x00, 0xB0, 0xC8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00,}, // chr=241
                {0x00, 0x40, 0x20, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=242
                {0x00, 0x10, 0x20, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=243
                {0x00, 0x20, 0x50, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=244
                {0x00, 0x68, 0xB0, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=245
                {0x00, 0x00, 0x50, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x00,}, // chr=246
                {0x00, 0x00, 0x00, 0x20, 0x00, 0xF8, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,}, // chr=247
                {0x00, 0x00, 0x00, 0x00, 0x70, 0x98, 0xA8, 0xC8, 0x70, 0x00, 0x00, 0x00,}, // chr=248
                {0x00, 0x40, 0x20, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=249
                {0x00, 0x10, 0x20, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=250
                {0x00, 0x20, 0x50, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=251
                {0x00, 0x00, 0x50, 0x00, 0x88, 0x88, 0x88, 0x98, 0x68, 0x00, 0x00, 0x00,}, // chr=252
                {0x10, 0x20, 0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00,}, // chr=253
                {0x00, 0x00, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00,}, // chr=254
                {0x00, 0x00, 0x50, 0x00, 0x88, 0x88, 0x88, 0x88, 0x78, 0x08, 0x70, 0x00,}, // chr=255
        };
    }

    public static class AVGA2_8x14
    {
        /*
         * file './font-bin/GdfBitmapFont.AVGA2_8x14.bin', filesize 3584bytes, linewidth=14bytes
         * array created from bin-file by bin2header
         * bin2header (c) 2013 Nils Stec, <nils.stec@gmail.com>
         *
         */
        public static int start = 0;
        public static int height = 14;
        public static int width = 8;
        public static int wbase = 8;
        public static int[] wAdvance = null;
        public static int[] cMap = null;
        public static int table[][] = {
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0xbd, 0x99, 0x81, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0xff, 0xdb, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x6c, 0xfe, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0xe7, 0xe7, 0xe7, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x7e, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x00, 0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x1e, 0x0e, 0x1a, 0x32, 0x78, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3f, 0x33, 0x3f, 0x30, 0x30, 0x30, 0x70, 0xf0, 0xe0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7f, 0x63, 0x7f, 0x63, 0x63, 0x63, 0x67, 0xe7, 0xe6, 0xc0, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0xdb, 0x3c, 0xe7, 0x3c, 0xdb, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xf8, 0xfe, 0xf8, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x02, 0x06, 0x0e, 0x3e, 0xfe, 0x3e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7f, 0xdb, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x1b, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x0c, 0xc6, 0x7c, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x7e, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x28, 0x6c, 0xfe, 0x6c, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x7c, 0x7c, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x7c, 0x7c, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x7c, 0xc6, 0xc2, 0xc0, 0x7c, 0x06, 0x86, 0xc6, 0x7c, 0x18, 0x18, 0x00 } ,
                { 0x00, 0x00, 0x00, 0xc2, 0xc6, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0x86, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x02, 0x06, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x06, 0x3c, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x1e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x60, 0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x06, 0x0c, 0x78, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x0c, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xde, 0xde, 0xde, 0xdc, 0xc0, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x66, 0x66, 0x66, 0xfc, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xde, 0xc6, 0x66, 0x3a, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xe6, 0x66, 0x6c, 0x6c, 0x78, 0x6c, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xf0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xde, 0x7c, 0x0c, 0x0e, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x60, 0x38, 0x0c, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x7c, 0x6c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x38, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0x8c, 0x18, 0x30, 0x60, 0xc2, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x80, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00 } ,
                { 0x00, 0x30, 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x78, 0x6c, 0x66, 0x66, 0x66, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1c, 0x0c, 0x0c, 0x3c, 0x6c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xcc, 0x78, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x6c, 0x76, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x06, 0x06, 0x00, 0x0e, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0x0c, 0x1e, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0x70, 0x1c, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x10, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x36, 0x1c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0xf8, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xcc, 0x18, 0x30, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x0c, 0x06, 0x7c, 0x00 } ,
                { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x38, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x06, 0x3c, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xcc, 0xcc, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x3c, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc6, 0xc6, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x38, 0x6c, 0x38, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x30, 0x60, 0x00, 0xfe, 0x66, 0x60, 0x7c, 0x60, 0x66, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xcc, 0x76, 0x36, 0x7e, 0xd8, 0xd8, 0x6e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3e, 0x6c, 0xcc, 0xcc, 0xfe, 0xcc, 0xcc, 0xcc, 0xce, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x30, 0x78, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00 } ,
                { 0x00, 0xc6, 0xc6, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc6, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x18, 0x3c, 0x66, 0x60, 0x60, 0x66, 0x3c, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0xe6, 0xfc, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xf8, 0xcc, 0xcc, 0xf8, 0xc4, 0xcc, 0xde, 0xcc, 0xcc, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0e, 0x1b, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0xd8, 0x70, 0x00 } ,
                { 0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x30, 0x60, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x76, 0xdc, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00 } ,
                { 0x76, 0xdc, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc0, 0xc0, 0xc6, 0xcc, 0xd8, 0x30, 0x60, 0xdc, 0x86, 0x0c, 0x18, 0x3e, 0x00 } ,
                { 0x00, 0xc0, 0xc0, 0xc6, 0xcc, 0xd8, 0x30, 0x66, 0xce, 0x9e, 0x3e, 0x06, 0x06, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x36, 0x6c, 0xd8, 0x6c, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xd8, 0x6c, 0x36, 0x6c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44 } ,
                { 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa } ,
                { 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0 } ,
                { 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0xd8, 0xd8, 0xdc, 0x76, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0x40, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xc0, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0x18, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x6c, 0x6c, 0xee, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1e, 0x30, 0x18, 0x0c, 0x3e, 0x66, 0x66, 0x66, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xdb, 0xdb, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x03, 0x06, 0x7e, 0xdb, 0xdb, 0xf3, 0x7e, 0x60, 0xc0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1c, 0x30, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x30, 0x1c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x00, 0x7e, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x7e, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x3c, 0x1c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xd8, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x70, 0xd8, 0x30, 0x60, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
        };
    }

    public static class Ascii_6x11
    {
        /*
         * file './font-bin/GdfBitmapFont.ASCII_6x11.bin'
         * array created from bin-file by bin2header
         * bin2header (c) 2013 Nils Stec, <nils.stec@gmail.com>
         *
         */
        public static int start = 32;
        public static int height = 11;
        public static int width = 6;
        public static int wbase = 8;
        public static int[] wAdvance = null;
        public static int table[][] = {
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0xF8,  0x50,  0xF8,  0x50,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x20,  0x70,  0xA8,  0xA0,  0x70,  0x28,  0xA8,  0x70,  0x20,  0x00 },
                { 0x00,  0x00,  0x40,  0xA4,  0xA8,  0x58,  0x34,  0x54,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x60,  0x90,  0xA0,  0x40,  0xA8,  0x90,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x20,  0x40,  0x40,  0x40,  0x20,  0x10,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x10,  0x08,  0x08,  0x08,  0x10,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0xA8,  0x70,  0xA8,  0x20,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x20,  0xF8,  0x20,  0x20,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x40,  0x40,  0x80 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0xE0,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x80,  0x00,  0x00 },
                { 0x00,  0x00,  0x08,  0x08,  0x10,  0x10,  0x20,  0x20,  0x40,  0x40,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x30,  0x10,  0x10,  0x10,  0x10,  0x10,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x08,  0x10,  0x20,  0x40,  0xF8,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x08,  0x30,  0x08,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x30,  0x50,  0x90,  0xF8,  0x10,  0x10,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x80,  0xF0,  0x08,  0x08,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x80,  0xF0,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x08,  0x08,  0x10,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0x70,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x20,  0x00,  0x00,  0x00,  0x20,  0x20,  0x40 },
                { 0x00,  0x00,  0x00,  0x10,  0x20,  0x40,  0x20,  0x10,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0xF8,  0x00,  0xF8,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x40,  0x20,  0x10,  0x20,  0x40,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x08,  0x10,  0x20,  0x00,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0xE8,  0xA8,  0xF0,  0x80,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x88,  0x88,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x80,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0xF0,  0x88,  0x88,  0x88,  0x88,  0x88,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0x80,  0xF8,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0x80,  0x80,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x80,  0x98,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x08,  0x08,  0x08,  0x08,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x90,  0xA0,  0xC0,  0xA0,  0x90,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x80,  0x80,  0x80,  0x80,  0x80,  0x80,  0xF8,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0xD8,  0xA8,  0x88,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0xC8,  0xA8,  0x98,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x80,  0x80,  0x80,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x08,  0x00 },
                { 0x00,  0x00,  0xF0,  0x88,  0x88,  0xF0,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x80,  0x70,  0x08,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x50,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0xA8,  0xD8,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x50,  0x20,  0x20,  0x20,  0x50,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0xF8,  0x08,  0x10,  0x20,  0x40,  0x80,  0xF8,  0x00,  0x00 },
                { 0x00,  0x00,  0x30,  0x20,  0x20,  0x20,  0x20,  0x20,  0x30,  0x00,  0x00 },
                { 0x00,  0x00,  0x40,  0x40,  0x20,  0x20,  0x10,  0x10,  0x08,  0x08,  0x00 },
                { 0x00,  0x00,  0x30,  0x10,  0x10,  0x10,  0x10,  0x10,  0x30,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0xFC,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x10,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x00,  0x08,  0x08,  0x78,  0x88,  0x88,  0x88,  0x78,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x00,  0x18,  0x20,  0x70,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
                { 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0xC0 },
                { 0x00,  0x00,  0x80,  0x80,  0x90,  0xA0,  0xE0,  0x90,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0xF0,  0xA8,  0xA8,  0xA8,  0xA8,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0xB0,  0xC8,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80 },
                { 0x00,  0x00,  0x00,  0x00,  0x78,  0x88,  0x88,  0x88,  0x78,  0x08,  0x08 },
                { 0x00,  0x00,  0x00,  0x00,  0xB0,  0xC8,  0x80,  0x80,  0x80,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x78,  0x80,  0x70,  0x08,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x70,  0x20,  0x20,  0x20,  0x18,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0xA8,  0xA8,  0xA8,  0xA8,  0x50,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x88,  0x50,  0x20,  0x50,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
                { 0x00,  0x00,  0x00,  0x00,  0xF8,  0x10,  0x20,  0x40,  0xF8,  0x00,  0x00 },
                { 0x00,  0x08,  0x10,  0x10,  0x10,  0x20,  0x10,  0x10,  0x10,  0x08,  0x00 },
                { 0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00 },
                { 0x00,  0x40,  0x20,  0x20,  0x20,  0x10,  0x20,  0x20,  0x20,  0x40,  0x00 },
                { 0x00,  0x00,  0x68,  0xB0,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x10,  0x10,  0x20,  0x00 },
                { 0x18,  0x20,  0x20,  0x20,  0x70,  0x20,  0x20,  0x20,  0x20,  0x20,  0xC0 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x48,  0x48,  0x90,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0xA8,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x70,  0x20,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x20,  0x20,  0x70,  0x20,  0x20,  0x70,  0x20,  0x20,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x40,  0xA8,  0xB0,  0x54,  0x6A,  0xAA,  0x94,  0x00,  0x00 },
                { 0x50,  0x20,  0x70,  0x88,  0x80,  0x70,  0x08,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x40,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x7C,  0x90,  0x90,  0x98,  0x90,  0x90,  0x7C,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x20,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x30,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x28,  0x50,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x28,  0x28,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x70,  0xF8,  0xF8,  0xF8,  0x70,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x70,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0xFC,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x28,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0xF4,  0x5C,  0x5C,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x50,  0x20,  0x00,  0x78,  0x80,  0x70,  0x08,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x50,  0xA8,  0xB8,  0xA0,  0x58,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x50,  0x00,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x00,  0x10,  0x10,  0x10,  0x10,  0x10,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x70,  0xA8,  0xA0,  0xA8,  0x70,  0x20,  0x00 },
                { 0x00,  0x60,  0x90,  0x80,  0xE0,  0x80,  0x80,  0x88,  0xF0,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x60,  0x90,  0x90,  0x60,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x88,  0x50,  0xF8,  0x20,  0xF8,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x20,  0x20,  0x20,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x00 },
                { 0x70,  0x88,  0x48,  0xA0,  0x90,  0x48,  0x28,  0x90,  0x88,  0x70,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x38,  0x44,  0x9A,  0xA2,  0x9A,  0x44,  0x38,  0x00,  0x00 },
                { 0x00,  0x00,  0x38,  0x48,  0x48,  0x38,  0x00,  0x78,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x48,  0x90,  0x90,  0x48,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0xF8,  0x08,  0x08,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x78,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x38,  0x44,  0xBA,  0xAA,  0xB2,  0xAA,  0x44,  0x38,  0x00,  0x00 },
                { 0x00,  0x00,  0x78,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x30,  0x48,  0x48,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x20,  0xF8,  0x20,  0x20,  0xF8,  0x00,  0x00 },
                { 0x60,  0x90,  0x20,  0x40,  0xF0,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x60,  0x10,  0x30,  0x10,  0x60,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x10,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x90,  0x90,  0x90,  0x90,  0xE8,  0x80,  0x80 },
                { 0x00,  0x78,  0xA8,  0xA8,  0xA8,  0x78,  0x28,  0x28,  0x28,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x30,  0x30,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x20,  0x10,  0x60 },
                { 0x20,  0x60,  0x20,  0x20,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x30,  0x48,  0x48,  0x30,  0x00,  0x78,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x00,  0x90,  0x48,  0x48,  0x90,  0x00,  0x00 },
                { 0x20,  0x60,  0x20,  0x20,  0x00,  0xF8,  0x20,  0x60,  0xF0,  0x20,  0x20 },
                { 0x20,  0x60,  0x20,  0x20,  0x00,  0xF8,  0x60,  0x90,  0x20,  0x40,  0xF0 },
                { 0x60,  0x10,  0x30,  0x10,  0x60,  0xF8,  0x20,  0x60,  0xF0,  0x20,  0x20 },
                { 0x00,  0x00,  0x20,  0x00,  0x20,  0x40,  0x80,  0x88,  0x70,  0x00,  0x00 },
                { 0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x20,  0x40,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x50,  0x00,  0x00,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x20,  0x50,  0x20,  0x70,  0x88,  0x88,  0xF8,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x00,  0x7C,  0x90,  0x90,  0xF8,  0x90,  0x90,  0x9C,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x80,  0x88,  0x70,  0x20,  0x40 },
                { 0x40,  0x20,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
                { 0x10,  0x20,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
                { 0x20,  0x50,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
                { 0x50,  0x00,  0x00,  0xF8,  0x80,  0x80,  0xF0,  0x80,  0xF8,  0x00,  0x00 },
                { 0x40,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x10,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x20,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x50,  0x00,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x78,  0x44,  0x44,  0xE4,  0x44,  0x44,  0x78,  0x00,  0x00 },
                { 0x68,  0xB0,  0x00,  0x88,  0xC8,  0xA8,  0x98,  0x88,  0x88,  0x00,  0x00 },
                { 0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x10,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x50,  0x20,  0x50,  0x00,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x70,  0x88,  0x98,  0xA8,  0xC8,  0x88,  0x70,  0x00,  0x00 },
                { 0x40,  0x20,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x10,  0x20,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x20,  0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x10,  0x20,  0x88,  0x88,  0x88,  0x50,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80,  0x00,  0x00 },
                { 0x00,  0x30,  0x48,  0x88,  0x90,  0x90,  0x88,  0x88,  0xB0,  0x80,  0x00 },
                { 0x00,  0x20,  0x10,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x10,  0x20,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x68,  0xB0,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x30,  0x48,  0x30,  0x00,  0x78,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0xA8,  0xB8,  0xA0,  0x78,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0x88,  0x80,  0x80,  0x78,  0x20,  0x40 },
                { 0x00,  0x40,  0x20,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x10,  0x20,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x70,  0x88,  0xF8,  0x80,  0x78,  0x00,  0x00 },
                { 0x00,  0x40,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x10,  0x20,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x20,  0x20,  0x20,  0x20,  0x20,  0x00,  0x00 },
                { 0x00,  0x20,  0x78,  0x10,  0x18,  0x28,  0x48,  0x48,  0x30,  0x00,  0x00 },
                { 0x00,  0x68,  0xB0,  0x00,  0xB0,  0xC8,  0x88,  0x88,  0x88,  0x00,  0x00 },
                { 0x00,  0x40,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x10,  0x20,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x68,  0xB0,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x70,  0x88,  0x88,  0x88,  0x70,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x20,  0x00,  0xF8,  0x00,  0x20,  0x00,  0x00,  0x00 },
                { 0x00,  0x00,  0x00,  0x00,  0x70,  0x98,  0xA8,  0xC8,  0x70,  0x00,  0x00 },
                { 0x00,  0x40,  0x20,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x10,  0x20,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x20,  0x50,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x00,  0x00,  0x50,  0x00,  0x88,  0x88,  0x88,  0x98,  0x68,  0x00,  0x00 },
                { 0x10,  0x20,  0x00,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
                { 0x00,  0x00,  0x80,  0x80,  0xF0,  0x88,  0x88,  0x88,  0xF0,  0x80,  0x80 },
                { 0x00,  0x00,  0x50,  0x00,  0x88,  0x88,  0x88,  0x88,  0x78,  0x08,  0x70 },
        };
    }

    public static class AVGA2_8x16
    {
        /*
         * file './font-bin/GdfBitmapFont.AVGA2_8x16.bin', filesize 3584bytes, linewidth=14bytes
         * array created from bin-file by bin2header
         * bin2header (c) 2013 Nils Stec, <nils.stec@gmail.com>
         *
         */
        public static int start = 0;
        public static int height = 16;
        public static int width = 8;
        public static int wbase = 8;
        public static int[] wAdvance = null;

        public static int table[][] = {
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0x81, 0xa5, 0x81, 0x81, 0xbd, 0x99, 0x81, 0x81, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0xff, 0xdb, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0xff, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x6c, 0xfe, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0xff, 0xe7, 0xff, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x7e, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x00, 0x1e, 0x0e, 0x1a, 0x32, 0x78, 0xcc, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3f, 0x33, 0x33, 0x3f, 0x30, 0x30, 0x30, 0x30, 0x70, 0xf0, 0xe0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7f, 0x63, 0x63, 0x7f, 0x63, 0x63, 0x63, 0x63, 0x67, 0xe7, 0xe6, 0xc0, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0xdb, 0x3c, 0x24, 0xe7, 0x24, 0x3c, 0xdb, 0x18, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfe, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x02, 0x06, 0x0e, 0x1e, 0x3e, 0xfe, 0x3e, 0x1e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7f, 0xdb, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x38, 0x0c, 0xc6, 0x7c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x6c, 0xfe, 0x6c, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x7c, 0x7c, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfe, 0x7c, 0x7c, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x3c, 0x3c, 0x3c, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x6c, 0xfe, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x7c, 0xc6, 0xc2, 0xc0, 0x7c, 0x06, 0x06, 0x86, 0xc6, 0x7c, 0x18, 0x18, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xc2, 0xc6, 0x0c, 0x18, 0x30, 0x60, 0xc6, 0x86, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x30, 0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0x06, 0x06, 0x3c, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0x06, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x60, 0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0x06, 0x06, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x06, 0x06, 0x0c, 0x78, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x0c, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xde, 0xde, 0xde, 0xdc, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x66, 0x66, 0x66, 0x66, 0xfc, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xf8, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xde, 0xc6, 0xc6, 0x66, 0x3a, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0xcc, 0x78, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xe6, 0x66, 0x66, 0x6c, 0x78, 0x78, 0x6c, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xf0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xde, 0x7c, 0x0c, 0x0e, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfc, 0x66, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0x60, 0x38, 0x0c, 0x06, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xd6, 0xfe, 0xee, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x7c, 0x38, 0x38, 0x7c, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0x86, 0x0c, 0x18, 0x30, 0x60, 0xc2, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00 } ,
                { 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x78, 0x6c, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1c, 0x0c, 0x0c, 0x3c, 0x6c, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xcc, 0x78, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x6c, 0x76, 0x66, 0x66, 0x66, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x06, 0x06, 0x00, 0x0e, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c, 0x00 } ,
                { 0x00, 0x00, 0xe0, 0x60, 0x60, 0x66, 0x6c, 0x78, 0x78, 0x6c, 0x66, 0xe6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0xd6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0x0c, 0x1e, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0x76, 0x66, 0x60, 0x60, 0x60, 0xf0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0x60, 0x38, 0x0c, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x10, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x30, 0x30, 0x36, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0xf8, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xcc, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0e, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x18, 0x0e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3c, 0x66, 0xc2, 0xc0, 0xc0, 0xc0, 0xc2, 0x66, 0x3c, 0x0c, 0x06, 0x7c, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xcc, 0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xcc, 0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x38, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0xc0, 0xc6, 0x7c, 0x06, 0x3c, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0xc0, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x3c, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc6, 0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x38, 0x6c, 0x38, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x30, 0x60, 0x00, 0xfe, 0x66, 0x60, 0x7c, 0x60, 0x60, 0x66, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xcc, 0x76, 0x36, 0x7e, 0xd8, 0xd8, 0x6e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x3e, 0x6c, 0xcc, 0xcc, 0xfe, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x10, 0x38, 0x6c, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x30, 0x78, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x60, 0x30, 0x18, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00 } ,
                { 0x00, 0xc6, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc6, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x18, 0x3c, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3c, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x64, 0x60, 0xf0, 0x60, 0x60, 0x60, 0x60, 0xe6, 0xfc, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xf8, 0xcc, 0xcc, 0xf8, 0xc4, 0xcc, 0xde, 0xcc, 0xcc, 0xcc, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0e, 0x1b, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0x70, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0c, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x30, 0x60, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x18, 0x30, 0x60, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x76, 0xdc, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x76, 0xdc, 0x00, 0xc6, 0xe6, 0xf6, 0xfe, 0xde, 0xce, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0xc0, 0xc6, 0xc6, 0x7c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xc0, 0xc0, 0xc2, 0xc6, 0xcc, 0x18, 0x30, 0x60, 0xdc, 0x86, 0x0c, 0x18, 0x3e, 0x00, 0x00 } ,
                { 0x00, 0xc0, 0xc0, 0xc2, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xce, 0x96, 0x3e, 0x06, 0x06, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x3c, 0x3c, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x6c, 0xd8, 0x6c, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x6c, 0x36, 0x6c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44 } ,
                { 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa } ,
                { 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77, 0xdd, 0x77 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } ,
                { 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0 } ,
                { 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f } ,
                { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0xd8, 0xd8, 0xd8, 0xdc, 0x76, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x78, 0xcc, 0xcc, 0xf8, 0xcc, 0xc6, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0x40, 0x00, 0x00 } ,
                { 0x00, 0x00, 0xfe, 0xc6, 0xc6, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0xfe, 0xc6, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc6, 0xfe, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xc0, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x7e, 0x18, 0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x38, 0x6c, 0xc6, 0xc6, 0xc6, 0x6c, 0x6c, 0x6c, 0x6c, 0xee, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1e, 0x30, 0x18, 0x0c, 0x3e, 0x66, 0x66, 0x66, 0x66, 0x3c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xdb, 0xdb, 0xdb, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x03, 0x06, 0x7e, 0xdb, 0xdb, 0xf3, 0x7e, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x1c, 0x30, 0x60, 0x60, 0x7c, 0x60, 0x60, 0x60, 0x30, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x30, 0x18, 0x0c, 0x06, 0x0c, 0x18, 0x30, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x0c, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0c, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } ,
                { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0xd8, 0x70, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x7e, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x6c, 0x3c, 0x1c, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0xd8, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x70, 0xd8, 0x30, 0x60, 0xc8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00 } ,
                { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
        };
    }

    public static class Ascii_8x8
    {
        /*
         * file './font-bin/GdfBitmapFont.ASCII_8x8.bin'
         * array created from bin-file by bin2header
         * bin2header (c) 2013 Nils Stec, <nils.stec@gmail.com>
         *
         */
        public static int start = 0;
        public static int height = 8;
        public static int width = 8;
        public static int wbase = 8;
        public static int[] wAdvance = null;
        public static int[] cMap = null;
        public static int table[][] = {
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* Ascii 0 */
                {0x3c, 0x42, 0xa5, 0x81, 0xbd, 0x42, 0x3c, 0x00},    /* Ascii 1 */
                {0x3c, 0x7e, 0xdb, 0xff, 0xc3, 0x7e, 0x3c, 0x00},    /* Ascii 2 */
                {0x00, 0xee, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 3 */
                {0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 4 */
                {0x00, 0x3c, 0x18, 0xff, 0xff, 0x08, 0x18, 0x00},    /* Ascii 5 */
                {0x10, 0x38, 0x7c, 0xfe, 0xfe, 0x10, 0x38, 0x00},    /* Ascii 6 */
                {0x00, 0x00, 0x18, 0x3c, 0x18, 0x00, 0x00, 0x00},    /* Ascii 7 */
                {0xff, 0xff, 0xe7, 0xc3, 0xe7, 0xff, 0xff, 0xff},    /* Ascii 8 */
                {0x00, 0x3c, 0x42, 0x81, 0x81, 0x42, 0x3c, 0x00},    /* Ascii 9 */
                {0xff, 0xc3, 0xbd, 0x7e, 0x7e, 0xbd, 0xc3, 0xff},    /* Ascii 10 */
                {0x1f, 0x07, 0x0d, 0x7c, 0xc6, 0xc6, 0x7c, 0x00},    /* Ascii 11 */
                {0x00, 0x7e, 0xc3, 0xc3, 0x7e, 0x18, 0x7e, 0x18},    /* Ascii 12 */
                {0x04, 0x06, 0x07, 0x04, 0x04, 0xfc, 0xf8, 0x00},    /* Ascii 13 */
                {0x0c, 0x0a, 0x0d, 0x0b, 0xf9, 0xf9, 0x1f, 0x1f},    /* Ascii 14 */
                {0x00, 0x92, 0x7c, 0x44, 0xc6, 0x7c, 0x92, 0x00},    /* Ascii 15 */
                {0x00, 0x00, 0x60, 0x78, 0x7e, 0x78, 0x60, 0x00},    /* Ascii 16 */
                {0x00, 0x00, 0x06, 0x1e, 0x7e, 0x1e, 0x06, 0x00},    /* Ascii 17 */
                {0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x18},    /* Ascii 18 */
                {0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00},    /* Ascii 19 */
                {0xff, 0xb6, 0x76, 0x36, 0x36, 0x36, 0x36, 0x00},    /* Ascii 20 */
                {0x7e, 0xc1, 0xdc, 0x22, 0x22, 0x1f, 0x83, 0x7e},    /* Ascii 21 */
                {0x00, 0x00, 0x00, 0x7e, 0x7e, 0x00, 0x00, 0x00},    /* Ascii 22 */
                {0x18, 0x7e, 0x18, 0x18, 0x7e, 0x18, 0x00, 0xff},    /* Ascii 23 */
                {0x18, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00},    /* Ascii 24 */
                {0x18, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x18, 0x00},    /* Ascii 25 */
                {0x00, 0x04, 0x06, 0xff, 0x06, 0x04, 0x00, 0x00},    /* Ascii 26 */
                {0x00, 0x20, 0x60, 0xff, 0x60, 0x20, 0x00, 0x00},    /* Ascii 27 */
                {0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xff, 0x00},    /* Ascii 28 */
                {0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00},    /* Ascii 29 */
                {0x00, 0x00, 0x10, 0x38, 0x7c, 0xfe, 0x00, 0x00},    /* Ascii 30 */
                {0x00, 0x00, 0x00, 0xfe, 0x7c, 0x38, 0x10, 0x00},    /* Ascii 31 */
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* */
                {0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x30, 0x00},    /* ! */
                {0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},    /* " */
                {0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00},    /* # */
                {0x10, 0x7c, 0xd2, 0x7c, 0x86, 0x7c, 0x10, 0x00},    /* $ */
                {0xf0, 0x96, 0xfc, 0x18, 0x3e, 0x72, 0xde, 0x00},    /* % */
                {0x30, 0x48, 0x30, 0x78, 0xce, 0xcc, 0x78, 0x00},    /* & */
                {0x0c, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},    /* ' */
                {0x10, 0x60, 0xc0, 0xc0, 0xc0, 0x60, 0x10, 0x00},    /* ( */
                {0x10, 0x0c, 0x06, 0x06, 0x06, 0x0c, 0x10, 0x00},    /* ) */
                {0x00, 0x54, 0x38, 0xfe, 0x38, 0x54, 0x00, 0x00},    /* * */
                {0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00},    /* + */
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x70},    /* , */
                {0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00},    /* - */
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00},    /* . */
                {0x02, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x00},    /* / */
                {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* 0 */
                {0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* 1 */
                {0x7c, 0xc6, 0x06, 0x0c, 0x30, 0x60, 0xfe, 0x00},    /* 2 */
                {0x7c, 0xc6, 0x06, 0x3c, 0x06, 0xc6, 0x7c, 0x00},    /* 3 */
                {0x0e, 0x1e, 0x36, 0x66, 0xfe, 0x06, 0x06, 0x00},    /* 4 */
                {0xfe, 0xc0, 0xc0, 0xfc, 0x06, 0x06, 0xfc, 0x00},    /* 5 */
                {0x7c, 0xc6, 0xc0, 0xfc, 0xc6, 0xc6, 0x7c, 0x00},    /* 6 */
                {0xfe, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x60, 0x00},    /* 7 */
                {0x7c, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0x7c, 0x00},    /* 8 */
                {0x7c, 0xc6, 0xc6, 0x7e, 0x06, 0xc6, 0x7c, 0x00},    /* 9 */
                {0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00},    /* : */
                {0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x20, 0x00},    /* }, */
                {0x00, 0x1c, 0x30, 0x60, 0x30, 0x1c, 0x00, 0x00},    /* < */
                {0x00, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x00, 0x00},    /* = */
                {0x00, 0x70, 0x18, 0x0c, 0x18, 0x70, 0x00, 0x00},    /* > */
                {0x7c, 0xc6, 0x0c, 0x18, 0x30, 0x00, 0x30, 0x00},    /* ? */
                {0x7c, 0x82, 0x9a, 0xaa, 0xaa, 0x9e, 0x7c, 0x00},    /* @ */
                {0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0x00},    /* A */
                {0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0x00},    /* B */
                {0x7c, 0xc6, 0xc6, 0xc0, 0xc0, 0xc6, 0x7c, 0x00},    /* C */
                {0xf8, 0xcc, 0xc6, 0xc6, 0xc6, 0xcc, 0xf8, 0x00},    /* D */
                {0xfe, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xfe, 0x00},    /* E */
                {0xfe, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xc0, 0x00},    /* F */
                {0x7c, 0xc6, 0xc0, 0xce, 0xc6, 0xc6, 0x7e, 0x00},    /* G */
                {0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00},    /* H */
                {0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00},    /* I */
                {0x1e, 0x06, 0x06, 0x06, 0xc6, 0xc6, 0x7c, 0x00},    /* J */
                {0xc6, 0xcc, 0xd8, 0xf0, 0xd8, 0xcc, 0xc6, 0x00},    /* K */
                {0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0x00},    /* L */
                {0xc6, 0xee, 0xfe, 0xd6, 0xc6, 0xc6, 0xc6, 0x00},    /* M */
                {0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00},    /* N */
                {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* O */
                {0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0xc0, 0x00},    /* P */
                {0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x06},    /* Q */
                {0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xc6, 0x00},    /* R */
                {0x78, 0xcc, 0x60, 0x30, 0x18, 0xcc, 0x78, 0x00},    /* S */
                {0xfc, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00},    /* T */
                {0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* U */
                {0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},    /* V */
                {0xc6, 0xc6, 0xc6, 0xd6, 0xfe, 0xee, 0xc6, 0x00},    /* W */
                {0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00},    /* X */
                {0xc3, 0xc3, 0x66, 0x3c, 0x18, 0x18, 0x18, 0x00},    /* Y */
                {0xfe, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0xfe, 0x00},    /* Z */
                {0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00},    /* [ */
                {0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x00},    /* \ */
                {0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00},    /* ] */
                {0x00, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00},    /* ^ */
                {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff},    /* _ */
                {0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},    /* ` */
                {0x00, 0x00, 0x7c, 0x06, 0x7e, 0xc6, 0x7e, 0x00},    /* a */
                {0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xe6, 0xdc, 0x00},    /* b */
                {0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc0, 0x7e, 0x00},    /* c */
                {0x06, 0x06, 0x7e, 0xc6, 0xc6, 0xce, 0x76, 0x00},    /* d */
                {0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0x7e, 0x00},    /* e */
                {0x1e, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x00},    /* f */
                {0x00, 0x00, 0x7e, 0xc6, 0xce, 0x76, 0x06, 0x7c},    /* g */
                {0xc0, 0xc0, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x00},    /* */
                {0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* i */
                {0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0xf0},    /* j */
                {0xc0, 0xc0, 0xcc, 0xd8, 0xf0, 0xd8, 0xcc, 0x00},    /* k */
                {0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00},    /* l */
                {0x00, 0x00, 0xcc, 0xfe, 0xd6, 0xc6, 0xc6, 0x00},    /* m */
                {0x00, 0x00, 0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0x00},    /* n */
                {0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00},    /* o */
                {0x00, 0x00, 0xfc, 0xc6, 0xc6, 0xe6, 0xdc, 0xc0},    /* p */
                {0x00, 0x00, 0x7e, 0xc6, 0xc6, 0xce, 0x76, 0x06},    /* q */
                {0x00, 0x00, 0x6e, 0x70, 0x60, 0x60, 0x60, 0x00},    /* r */
                {0x00, 0x00, 0x7c, 0xc0, 0x7c, 0x06, 0xfc, 0x00},    /* s */
                {0x30, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x1c, 0x00},    /* t */
                {0x00, 0x00, 0xc6, 0xc6, 0xc6, 0xc6, 0x7e, 0x00},    /* u */
                {0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00},    /* v */
                {0x00, 0x00, 0xc6, 0xc6, 0xd6, 0xfe, 0x6c, 0x00},    /* w */
                {0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00},    /* x */
                {0x00, 0x00, 0xc6, 0xc6, 0xce, 0x76, 0x06, 0x7c},    /* y */
                {0x00, 0x00, 0xfc, 0x18, 0x30, 0x60, 0xfc, 0x00},    /* z */
                {0x0e, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0e, 0x00},    /* { */
                {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00},    /* | */
                {0xe0, 0x30, 0x30, 0x1c, 0x30, 0x30, 0xe0, 0x00},    /* } */
                {0x00, 0x00, 0x70, 0x9a, 0x0e, 0x00, 0x00, 0x00},    /* ~ */
                {0x00, 0x00, 0x18, 0x3c, 0x66, 0xff, 0x00, 0x00}    /* Ascii 127 */
        };

    }

    public static class EndianDataInputStream extends InputStream implements DataInput
    {
        DataInputStream dataIn;
        private ByteBuffer buffer = ByteBuffer.allocate(8);
        ByteOrder order = ByteOrder.BIG_ENDIAN;

        public EndianDataInputStream( InputStream stream ){
            dataIn = new DataInputStream( stream );
        }

        public EndianDataInputStream order(ByteOrder o){
            order = o;
            return this;
        }

        @Override
        public int read(byte[] b) throws IOException {
            return dataIn.read(b);
        }

        @Override
        public int read(byte[] b, int off, int len) throws IOException {
            return dataIn.read(b, off, len);
        }

        @Deprecated
        @Override
        public String readLine() throws IOException {
            return dataIn.readLine();
        }

        @Override
        public boolean readBoolean() throws IOException {
            return dataIn.readBoolean();
        }

        @Override
        public byte readByte() throws IOException {
            return dataIn.readByte();
        }

        @Override
        public int read() throws IOException {
            return readByte();
        }

        @Override
        public boolean markSupported(){
            return dataIn.markSupported();
        }

        @Override
        public void mark(int readlimit) {
            dataIn.mark(readlimit);
        }

        @Override
        public void reset() throws IOException {
            dataIn.reset();
        }

        @Override
        public char readChar() throws IOException {
            return dataIn.readChar();
        }

        @Override
        public void readFully(byte[] b) throws IOException {
            dataIn.readFully(b);
        }

        @Override
        public void readFully(byte[] b, int off, int len) throws IOException {
            dataIn.readFully(b, off, len);
        }

        @Override
        public String readUTF() throws IOException {
            return dataIn.readUTF();
        }

        @Override
        public int skipBytes(int n) throws IOException {
            return dataIn.skipBytes(n);
        }

        @Override
        public double readDouble() throws IOException {
            long tmp = readLong();
            return Double.longBitsToDouble( tmp );
        }

        @Override
        public float readFloat() throws IOException {
            int tmp = readInt();
            return Float.intBitsToFloat( tmp );
        }

        @Override
        public int readInt() throws IOException {
            buffer.clear();
            buffer.order( ByteOrder.BIG_ENDIAN )
                    .putInt( dataIn.readInt() )
                    .flip();
            return buffer.order( order ).getInt();
        }

        @Override
        public long readLong() throws IOException {
            buffer.clear();
            buffer.order( ByteOrder.BIG_ENDIAN )
                    .putLong( dataIn.readLong() )
                    .flip();
            return buffer.order( order ).getLong();
        }

        @Override
        public short readShort() throws IOException {
            buffer.clear();
            buffer.order( ByteOrder.BIG_ENDIAN )
                    .putShort( dataIn.readShort () )
                    .flip();
            return buffer.order( order ).getShort();
        }

        @Override
        public int readUnsignedByte() throws IOException {
            return (int)dataIn.readByte();
        }

        @Override
        public int readUnsignedShort() throws IOException {
            return (int)readShort();
        }
    }
}